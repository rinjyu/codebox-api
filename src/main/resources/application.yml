server:
  port: ${port.codebox-api}

spring:
  application:
    name: codebox-api
  profiles:
    active: local
  config:
    import: "optional:configserver:http://codebox-cloud-config"
    boot:
      admin:
        client:
          url: http://codebox-boot-admin
          instance:
            name: CodeBox API Service :${spring.application.name}
            service-base-url: http://codebox-boot-admin:${server.port}
          username: admin
          password: test
          enabled: true
  banner:
    location: classpath:/banner/banner.txt

management:
  endpoints:
    web:
      exposure:
        include: '*'

api:
  version:
    v1: v1

---
spring:
  config:
    activate:
      on-profile: local
    import: "optional:configserver:http://127.0.0.1:8500"
  boot:
    admin:
      client:
        url: http://127.0.0.1:${port.codebox-boot-admin}
        instance:
          name: CodeBox API Service :${spring.application.name}
          service-base-url: http://127.0.0.1:${server.port}
        username: admin
        password: test
        enabled: true
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password:
  h2:
    console:
      enabled: true
      path: /h2-console
      settings:
        trace: true
        web-allow-others: true
  sql:
    init:
      mode: always
      data-locations: classpath:data/data.sql
      schema-locations: classpath:data/schema.sql

---
spring:
  config:
    activate:
      on-profile: dev

---
spring:
  config:
    activate:
      on-profile: stag

---
spring:
  config:
    activate:
      on-profile: prod